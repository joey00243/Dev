Parameters:
  NameOfService:
    Description: "The name of the service this stack is task is to be used for."
    Type: String
  InstanceTypeParameter:
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - t2.small
      - t2.medium
      - m1.small
      - m1.large
    Description: Enter t2.micro, m1.small, or m1.large. Default is t2.micro.
  KeyName:
    Description: Name of EC2 login Key
    Type: "AWS::EC2::KeyPair::KeyName"

Mappings: 
  AmiRegionMap: 
    us-east-1: 
      AMI: "ami-04b70fa74e45c3917"
    us-west-1: 
      AMI: "ami-053b0d53c279acc90"
    eu-west-1: 
      AMI: "ami-0d527b8c289b4af7f"

Resources:
  WebServer:
    Type: 'AWS::EC2::Instance'
    Metadata:
      AWS::CloudFormation::Init:
        configSets:
          default:
            - setupPackages
            - downloadAndDeploy
        setupPackages:
          packages:
            apt:
              apache2: []
              php: []
              unzip: []
              wget: []
              git: []

        downloadAndDeploy:
          commands:
            01_download_unzip:
              command: |
                wget https://www.tooplate.com/zip-templates/2106_soft_landing.zip -O /tmp/2106_soft_landing.zip
                unzip /tmp/2106_soft_landing.zip -d /tmp/
                cp -r /tmp/2106_soft_landing/* /var/www/html/
                chown -R www-data:www-data /var/www/html
            02_create_html:
              command: |
                echo '<!DOCTYPE html>
                <html>
                <body>
                
                <h1> Welcome to cloudformation. </h1>
                <p> This site is deployed by cloudformation </p>
                
                </body>
                </html>' > /var/www/html/hello.html

          services:
            sysvinit:
              apache2:
                enabled: true
                ensureRunning: true

    Properties:
      InstanceType: !Ref InstanceTypeParameter
      KeyName: !Ref KeyName
      ImageId: !FindInMap
        - AmiRegionMap
        - !Ref AWS::Region
        - AMI
      Tags:
        - Key: "Name"
          Value: !Ref NameOfService
      SecurityGroups:
        - !Ref VprofileSG
      UserData: 
        Fn::Base64: 
          !Sub |
            #!/bin/bash -xe
            apt-get update -y
            apt-get install -y awscli
            apt-get install -y python3-pip
            pip3 install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz
            /usr/local/bin/cfn-init -v --stack ${AWS::StackName} --resource WebServer --region ${AWS::Region}
            /usr/local/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource WebServer --region ${AWS::Region}
  
  VprofileSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow ssh & http from MyIP
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 81.243.17.254/32

Outputs:
  PrintSomeInfo:
    Value: !GetAtt 
      - WebServer
      - PublicDnsName

